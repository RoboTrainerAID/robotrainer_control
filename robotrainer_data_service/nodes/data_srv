#!/usr/bin/env python

import sys
import rospy
import roslib
import os
from subprocess import call
from robotrainer_data_service.srv import *

global dir

def save_to_file(req):
    rospy.set_param(req.nameSpace + "/scenario", req.scenarioName);
    file_name = req.scenarioName
    if len(file_name) < 5 or file_name[-5:] != ".yaml":
        file_name += ".yaml"
    if file_name[0] != "/":
      if dir:
        file_name = dir + file_name #if this isn't a total path, add the default directory
    call(["rosparam", "dump" , file_name, "/" + req.nameSpace])
    return [True]
    
def load_from_file(req):
    file_name = req.scenarioName
    if len(file_name) < 5 or file_name[-5:] != ".yaml":
        file_name += ".yaml"
    if file_name[0] != "/":
      if isinstance(dir, str):
        file_name = dir + file_name #if this isn't a total path, add the default directory
    call(["rosparam", "load" , file_name, "/" + req.nameSpace])
    return [True]
        
def get_file_list(req):
    global dir
    dir = os.path.dirname(os.path.realpath(__file__))
    dir = os.path.abspath(os.path.join(dir, os.pardir))
    dir += "/yamls"
    if not os.path.exists(dir):
      return [False, "directory does not exist"]
    list = os.listdir(dir)
    list_as_string = ""
    for s in list:
      list_as_string += s + ";"
    dir += "/"
    if not len(list_as_string):
      return [False, "empty directory"]
    return [True, list_as_string]

def robotrainer_data_service_server():
    rospy.init_node('robotrainer_data_service')
    s = rospy.Service('save', DataOperation, save_to_file)
    print("Ready to save data to a file!")
    s = rospy.Service('load', DataOperation, load_from_file)
    print("Ready to load data from file!")
    s = rospy.Service('get_list', FileList, get_file_list)
    print("Ready to send file list!")
    rospy.spin()

if __name__ == "__main__":
    robotrainer_data_service_server()
